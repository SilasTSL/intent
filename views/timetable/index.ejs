<% layout('layouts/boilerplate')%>
<div id="main-body" class="container mt-5 mb-5" style="width: 100%; display: flex; flex-direction: row; justify-content: center;">
    <div id="timetable" class="mb-5" style="display: flex; flex-direction: column; align-items: center; width: 80%;">
        <div style="display: flex; flex-direction: row; align-items: center;" class="mb-4">
            <h1 style="text-align: center;">TIMETABLE</h1>
            <a href="/timetable/new" class="newButtons" style="margin-left: 3rem; transition-duration: 0.4s; padding: 1rem; text-decoration: none; color: white; background-color: #4caf50; border-radius: 20px;">New Lesson</a>
        </div>
        <table style="width: 90%; height: 100%; border-collapse: collapse;">
            <thead>
            <tr>
                <th></th>
                <% const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; %>
                <% var today = new Date(); %>
                <% var dayOfWeekString = days[today.getDay()]; %>
                <% for (let i = 1; i < 6; i++) { %>
                    <% if (days[i] == dayOfWeekString) { %> 
                        <th style="text-align: center; font-weight: 900;"><%= days[i] %></th>
                    <% } else { %> 
                        <th style="text-align: center; font-weight: 500;"><%= days[i] %></th>
                    <% } %>
                <% } %>
            </tr>
            </thead>
            <tbody>
            <% for (let r=8; r < 18; r++) { %>
                <tr style="height: 50px;">
                <% for (let c = 1; c < 7; c++) { %>
                    <% let unitFound = units.find(l => l.day == days[c - 1] && parseInt(l.timingStart.substring(0, 2)) <= r && parseInt(l.timingEnd.substring(0, 2)) > r); 
                    if (!unitFound) {
                        unitFound = units.find(t => t.timings.some(timings => timings.day == days[c - 1] && parseInt(timings.timingStart.substring(0, 2)) <= r && parseInt(timings.timingEnd.substring(0, 2)) > r));
                    } %>
                    <% if (c == 1) { %>
                        <td style="vertical-align: top; padding-right: 2rem;"><%= r + ":00 "%></td>
                    <% } else if (unitFound) { %>
                        <% console.log(unitFound) %>
                        <% if (unitFound.type == "Lesson" ? (parseInt(unitFound.timingStart.substring(0, 2)) == r) : true) {%>
                            <td class="<%= unitFound._id %> lesson-cell" style="color: white;background-color: <%= unitFound.colour %>; height: 50px; font-size: 0.8rem; padding: 10px; text-align: center; cursor: pointer; border: solid black 2px; <% if (parseInt(unitFound.timingEnd.substring(0, 2)) != r + 1) { %> border-bottom: 0px; <% } %> transition-duration: 0.4s;" onclick="window.location.href = '/timetable/<%= unitFound._id %>'"><%= unitFound.title %></td>
                        <% } else { %>
                            <td class="<%= unitFound._id %> lesson-cell" style="background-color: <%= unitFound.colour %>; cursor: pointer; border: solid black 2px; position: relative; z-index: 1;<% if (parseInt(unitFound.timingStart.substring(0, 2)) != r) { %> border-top: 0px; <% } %> transition-duration: 0.4s;" onclick="window.location.href = '/timetable/<%= unitFound._id %>'"></td>
                        <% } %>
                    <% } else { %>
                        <td href="/edit" style="height: 50px; border: solid #C0C0C0 1px; position: relative;"></td>
                    <% } %>
                <% } %>
                </tr>
            <% } %>
            </tbody>
        </table>
    </div>
</div>
<script>
    const cells = document.querySelectorAll(".lesson-cell");
    cells.forEach(cell => {
        cell.addEventListener('mouseover', () => {
            const sameLessonCells = document.getElementsByClassName(cell.classList[0])
            for (const sameLessonCell of sameLessonCells) {
                sameLessonCell.style.opacity = 0.8;
                sameLessonCell.style.borderColor = "#505050";
            }
        })
        cell.addEventListener('mouseout', function() {
            const sameLessonCells = document.getElementsByClassName(cell.classList[0])
            for (const sameLessonCell of sameLessonCells) {
                sameLessonCell.style.opacity = 1;
                sameLessonCell.style.borderColor = "black";
            }
        });
    });
</script>

