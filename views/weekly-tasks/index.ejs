<% layout('layouts/boilerplate')%>
<div id="tasksBodyContainer">
    <div id="loadingScreenWrapper">
        <div class="loading">
        </div>
    </div>

    <div class="taskIndexTitleRow">
        <h1 class="pageTitle">Tasks</h1>
        <div class="assignButton taskIndexButton">Assign</div>
        <div class="addTaskButton taskIndexButton">+ Add Task</div>
    </div>
    <div class="tasksBody">
    <% for (let weeklyTask of weeklyTasks) { %>
        <div class="task" style="<% if (!weeklyTask.isAssigned) { %> border: 1px solid red; <% } %>" onclick="window.location.href = '/edit/<%= weeklyTask._id %>/weekly-tasks'" >
            <h5><%= weeklyTask.title %></h5>
            <h6><span style="opacity: 0.7; font-size: 0.85rem;">Released on:</span> <%= weeklyTask.releasedOn %></h6>
            <h6><span style="opacity: 0.7; font-size: 0.85rem;">Deadline:</span> <%= weeklyTask.deadline %></h6>
            <h6><span style="opacity: 0.7; font-size: 0.85rem;">Duration:</span> <%= weeklyTask.duration %> Hrs</h6>
            <div class="taskBottomRow">
                <% if (weeklyTask.isAssigned) { %>
                    <h6 class="taskAssignText">Assigned</h6>
                <% } else { %>
                    <h6 class="taskAssignText" style="color: red">Unassigned</h6>
                <% } %>
                <div taskTitle="<%= weeklyTask.title %>" taskId="<%= weeklyTask._id %>" class="button indexDeleteTaskButton">Delete</div>
            </div>
        </div>
    <% } %>
    </div>
</div>
<script>
    const weeklyTasks = JSON.parse('<%- JSON.stringify(weeklyTasks) %>');
    const assignButton = document.getElementsByClassName('assignButton')[0];
    const addTaskButton = document.getElementsByClassName('addTaskButton')[0];
    const deleteTaskButtons = document.getElementsByClassName('indexDeleteTaskButton');
    
    for (let deleteTaskButton of deleteTaskButtons) {
        deleteTaskButton.addEventListener('click', () => {
            event.stopPropagation();
            if (confirm(`Are you sure you want to delete the task: [${deleteTaskButton.getAttribute('tasktitle')}]`)) {
                const taskId = deleteTaskButton.getAttribute('taskid');
                console.log("TASK ID: " + taskId);
                fetch(`/timetable/${taskId}`, {
                    method: 'DELETE',
                }).then(() => {
                    window.location.href = '/weekly-tasks';
                }).catch(e => {
                    console.log(e);
                })
            };
        })
    }

    function showLoadingScreen() {
        console.log("Showing Loading Screen!")
        document.getElementById('loadingScreenWrapper').style.display = 'flex';
    }

    function hideLoadingScreen() {
        console.log("Hiding Loading Screen!")
        document.getElementById('loadingScreenWrapper').style.display = 'none';
    }

    function assignOnClick() {
        // No unassigned tasks
        if (weeklyTasks.filter(task => !task.isAssigned).length <= 0) {
            alert("You have no unassigned tasks!");
            return;
        }

        // Display loading screen:
        showLoadingScreen();

        fetch('/assign')
        .then(response => {
            if (response.ok) {
                window.location.href = '/timetable';
            } else if (response.status === 401) {
                // No way to assign
                alert("No way to assign tasks within deadlines!");
                hideLoadingScreen();
            } else {
                // Something went wrong
                alert("Something went wrong! Please refresh and try again.");
                hideLoadingScreen();
            }
        })
    }

    assignButton.addEventListener('click', assignOnClick);
    addTaskButton.addEventListener('click', () => window.location.href = '/weekly-tasks/new');
</script>

